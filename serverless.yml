service: auction-service

plugins:
  - serverless-esbuild
  - serverless-pseudo-parameters

provider:
  name: aws
  runtime: nodejs16.x
  stage: ${opt:stage, 'dev'}
  region: sa-east-1
  environment:
    AUCTIONS_TABLE_NAME: ${self:custom.AuctionsTable.name}
  iam:
    role:
      statements:
        - ${file(iam/AuctionsTableIAM.yml):AuctionsTableIAM}

functions:
  createAuction:
    handler: src/handlers/http/createAuction.handler
    events:
      - http:
          method: POST
          path: auction
          authorizer: ${self:custom.authorizer}

  getAuctions:
    handler: src/handlers/http/getAuctions.handler
    events:
      - http:
          method: GET
          path: auctions

  getAuction:
    handler: src/handlers/http/getAuction.handler
    events:
      - http:
          method: GET
          path: auction/http/{id}

  placeBid:
    handler: src/handlers/http/placeBid.handler
    events:
      - http:
          method: PATCH
          path: auction/{id}/bid
          authorizer: ${self:custom.authorizer}

  processAuctions:
    handler: src/handlers/schedule/processAuctions.handler
    # events:
      # - schedule: rate(1 minute)

resources:
  Resources:
    AuctionsTable: ${file(resources/AuctionsTable.yml):AuctionsTable}

custom:
  authorizer: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:auth-service-${self:provider.stage}-auth
  AuctionsTable:
    name: !Ref AuctionsTable
    arn: !GetAtt AuctionsTable.Arn
  esbuild:
    bundle: true
    minify: false
    sourcemap: true
    exclude:
      - aws-sdk
    target: node16
    define:
      require.resolver: undefined
    platform: node
    concurrency: 10
